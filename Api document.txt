API Endpoints Documentation
Base URL
http://localhost:8000/api/
Endpoints
Authentication

Login

URL: /login/
Method: POST
Description: Authenticates a user with username and password.
Request Body:
Copy
{
  "username": "string",
  "password": "string"
}
Response:
Copy
{
  "success": true,
  "message": "string",
  "user_id": "integer",
  "role": "string",
  "access": "string"
}
Verify OTP

URL: /verify-otp/
Method: POST
Description: Verifies the OTP sent to the user's email.
Request Body:
Copy
{
  "user_id": "integer",
  "otp": "string"
}
Response:
Copy
{
  "success": true,
  "message": "string",
  "role": "string",
  "access": "string"
}
Attendance Management

Fetch Attendance Files

URL: /attendance-files/
Method: GET
Description: Retrieves attendance files based on semester, section, and subject.
Query Parameters:
semester: string
section: string
subject: string
Response:
Copy
{
  "success": true,
  "files": [
    {
      "id": "integer",
      "name": "string"
    }
  ]
}
Generate Statistics

URL: /generate-statistics/
Method: POST
Description: Generates attendance statistics for a selected file.
Request Body:
Copy
{
  "file_id": "integer"
}
Response:
Copy
{
  "success": true,
  "above_75": [
    {
      "student": "string",
      "percentage": "number"
    }
  ],
  "below_75": [
    {
      "student": "string",
      "percentage": "number"
    }
  ],
  "pdf_url": "string"
}
Enroll Student

URL: /enroll/
Method: POST
Description: Enrolls a student with details and photos.
Request Body:
Copy
{
  "name": "string",
  "usn": "string",
  "semester": "string",
  "section": "string",
  "photos": ["file"]
}
Response:
Copy
{
  "success": true,
  "message": "string"
}
Take Attendance

URL: /take-attendance/
Method: POST
Description: Processes attendance based on class photos.
Request Body:
Copy
{
  "semester": "string",
  "section": "string",
  "subject": "string",
  "class_images": ["file"]
}
Response:
Copy
{
  "success": true,
  "message": "string",
  "present_students": ["string"],
  "absent_students": ["string"],
  "sheet_url": "string"
}
Component Props Documentation
Common Props
children: ReactNode - Used to pass nested components or elements.
UserProvider
Props:
children: ReactNode - The child components that will have access to the user context.
ProtectedRoute
Props:
requiredRoles: string[] - An array of roles that are allowed to access the route.
children: ReactNode - The component to render if the user has the required role.
Context Usage Documentation
UserContext
Purpose: Manages user-related state across the application.
Values:
user: string | null - The username of the logged-in user.
role: string | null - The role of the logged-in user (e.g., student, teacher, hod).
token: string | null - The JWT token for authentication.
semester: string | null - The selected semester.
section: string | null - The selected section.
subject: string | null - The selected subject.
setUser: (user: string | null) => void - Sets the user state and updates localStorage.
setRole: (role: string | null) => void - Sets the role state and updates localStorage.
setToken: (token: string | null) => void - Sets the token state and updates localStorage.
setSemester: (semester: string | null) => void - Sets the semester state and updates localStorage.
setSection: (section: string | null) => void - Sets the section state and updates localStorage.
setSubject: (subject: string | null) => void - Sets the subject state and updates localStorage.
logout: () => void - Clears all user-related state and localStorage.
useUser Hook
Purpose: Custom hook to access the UserContext values.
Usage:
Copy
const { user, role, token, setUser, setRole, setToken, logout } = useUser();
This documentation provides a starting point for understanding the project's structure and functionality. 