# Generated by Django 5.1.7 on 2025-04-13 07:55

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('hod', 'HOD'), ('admin', 'Admin')], default='student', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='api_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='api_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('hod', models.OneToOneField(blank=True, limit_choices_to={'role': 'hod'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branch', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='api.branch')),
                ('faculty', models.ForeignKey(limit_choices_to={'role__in': ('teacher', 'hod')}, on_delete=django.db.models.deletion.CASCADE, related_name='faculty_leave_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'hod'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_reviewed_leaves', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8')])),
                ('name', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G')], max_length=1)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8')])),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_assignments', to='api.branch')),
                ('faculty', models.ForeignKey(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_assignments', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_assignments', to='api.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_assignments', to='api.semester')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('sheet_id', models.CharField(blank=True, max_length=255, null=True)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='completed', max_length=20)),
                ('faculty', models.ForeignKey(limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.branch')),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to='api.facultyassignment')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('usn', models.CharField(max_length=50, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('face_encoding', models.JSONField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), api.models.validate_image_size])),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.branch')),
                ('proctor', models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proctor_students', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.semester')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.student')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), api.models.validate_file_size])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='api.student')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='api.attendancerecord')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_details', to='api.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentLeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_reviewed_leaves', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_leave_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('semester', models.CharField(max_length=10)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='api.branch')),
            ],
        ),
        migrations.CreateModel(
            name='InternalMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField()),
                ('max_mark', models.IntegerField(default=40)),
                ('test_number', models.IntegerField(default=1)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('faculty', models.ForeignKey(limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_marks', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internal_marks', to='api.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internal_marks', to='api.subject')),
            ],
        ),
        migrations.AddField(
            model_name='facultyassignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_assignments', to='api.subject'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.subject'),
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday')], max_length=3)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(blank=True, max_length=50, null=True)),
                ('faculty_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='api.facultyassignment')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target', models.CharField(choices=[('faculty', 'Faculty'), ('students', 'Students'), ('both', 'Both')], default='both', max_length=10)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ('teacher', 'hod')}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='api.branch')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['branch', 'created_at'], name='api_announc_branch__71d688_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['branch', 'semester', 'name'], name='api_section_branch__33452f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('branch', 'semester', 'name')},
        ),
        migrations.AddIndex(
            model_name='semester',
            index=models.Index(fields=['branch', 'number'], name='api_semeste_branch__f31b40_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='semester',
            unique_together={('branch', 'number')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['student', 'created_at'], name='api_notific_student_2a6120_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['student', 'uploaded_at'], name='api_certifi_student_973486_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancedetail',
            index=models.Index(fields=['student'], name='api_attenda_student_880f99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancedetail',
            unique_together={('record', 'student')},
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['branch', 'semester'], name='api_subject_branch__8755d3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subject',
            unique_together={('branch', 'semester', 'name')},
        ),
        migrations.AddIndex(
            model_name='internalmark',
            index=models.Index(fields=['student', 'subject'], name='api_interna_student_8a9e04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='internalmark',
            unique_together={('student', 'subject', 'test_number')},
        ),
        migrations.AddIndex(
            model_name='facultyassignment',
            index=models.Index(fields=['faculty', 'branch'], name='api_faculty_faculty_25de05_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facultyassignment',
            unique_together={('faculty', 'branch', 'semester', 'section', 'subject')},
        ),
        migrations.AddIndex(
            model_name='timetable',
            index=models.Index(fields=['faculty_assignment', 'day'], name='api_timetab_faculty_178580_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timetable',
            unique_together={('faculty_assignment', 'day', 'start_time')},
        ),
    ]
